; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --interleave -omcu_application\adc.o --asm_dir=./ --list_dir=--list --depend=mcu_application\adc.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931 -I../Core/Inc -I../FATFS/Target -I../FATFS/App -I../USB_HOST/App -I../USB_HOST/Target -I../Drivers/STM32F4xx_HAL_Driver/Inc -I../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy -I../Middlewares/Third_Party/FatFs/src -I../Middlewares/ST/STM32_USB_Host_Library/Core/Inc -I../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc -I../Drivers/CMSIS/Device/ST/STM32F4xx/Include -I../Drivers/CMSIS/Include -I..\Drivers\CMSIS\DSP\Include -I..\Bootloader -I..\..\dwLaser_Application\MCU_Application\deviceInfo -I.\RTE\_MCU_Application -IC:\Users\linqi\AppData\Local\Arm\Packs\ARM\CMSIS\5.7.0\CMSIS\Core\Include -IC:\Users\linqi\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.15.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=533 -D_RTE_ -DSTM32F413xx -D_RTE_ -DUSE_HAL_DRIVER -DSTM32F413xx -DARM_MATH_CM4 --omf_browse=mcu_application\adc.crf ../Core/Src/adc.c]
                          THUMB

                          AREA ||i.HAL_ADC_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_ADC_MspDeInit PROC
;;;103    
;;;104    void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
000000  b510              PUSH     {r4,lr}
;;;105    {
000002  4604              MOV      r4,r0
;;;106    
;;;107      if(adcHandle->Instance==ADC1)
000004  4909              LDR      r1,|L1.44|
000006  6820              LDR      r0,[r4,#0]
000008  4288              CMP      r0,r1
00000a  d10d              BNE      |L1.40|
;;;108      {
;;;109      /* USER CODE BEGIN ADC1_MspDeInit 0 */
;;;110    
;;;111      /* USER CODE END ADC1_MspDeInit 0 */
;;;112        /* Peripheral clock disable */
;;;113        __HAL_RCC_ADC1_CLK_DISABLE();
00000c  4808              LDR      r0,|L1.48|
00000e  6800              LDR      r0,[r0,#0]
000010  f4207080          BIC      r0,r0,#0x100
000014  4906              LDR      r1,|L1.48|
000016  6008              STR      r0,[r1,#0]
;;;114    
;;;115        /**ADC1 GPIO Configuration
;;;116        PC0     ------> ADC1_IN10
;;;117        PC1     ------> ADC1_IN11
;;;118        PC2     ------> ADC1_IN12
;;;119        PC3     ------> ADC1_IN13
;;;120        PA0     ------> ADC1_IN0
;;;121        PA1     ------> ADC1_IN1
;;;122        PA2     ------> ADC1_IN2
;;;123        PA3     ------> ADC1_IN3
;;;124        */
;;;125        HAL_GPIO_DeInit(GPIOC, LPC_ISMON0_Pin|LPB_ISMON1_Pin|LPB_ISMON0_Pin|LPA_ISMON1_Pin);
000018  210f              MOVS     r1,#0xf
00001a  4806              LDR      r0,|L1.52|
00001c  f7fffffe          BL       HAL_GPIO_DeInit
;;;126    
;;;127        HAL_GPIO_DeInit(GPIOA, LPA_ISMON0_Pin|LASER_NTC_Pin|LASER_PD_Pin|LASER_FIBER_Pin);
000020  210f              MOVS     r1,#0xf
000022  4805              LDR      r0,|L1.56|
000024  f7fffffe          BL       HAL_GPIO_DeInit
                  |L1.40|
;;;128    
;;;129      /* USER CODE BEGIN ADC1_MspDeInit 1 */
;;;130    
;;;131      /* USER CODE END ADC1_MspDeInit 1 */
;;;132      }
;;;133    }
000028  bd10              POP      {r4,pc}
;;;134    
                          ENDP

00002a  0000              DCW      0x0000
                  |L1.44|
                          DCD      0x40012000
                  |L1.48|
                          DCD      0x40023844
                  |L1.52|
                          DCD      0x40020800
                  |L1.56|
                          DCD      0x40020000

                          AREA ||i.HAL_ADC_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_ADC_MspInit PROC
;;;63     
;;;64     void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
000000  b510              PUSH     {r4,lr}
;;;65     {
000002  b086              SUB      sp,sp,#0x18
000004  4604              MOV      r4,r0
;;;66     
;;;67       GPIO_InitTypeDef GPIO_InitStruct = {0};
000006  2114              MOVS     r1,#0x14
000008  a801              ADD      r0,sp,#4
00000a  f7fffffe          BL       __aeabi_memclr4
;;;68       if(adcHandle->Instance==ADC1)
00000e  4925              LDR      r1,|L2.164|
000010  6820              LDR      r0,[r4,#0]
000012  4288              CMP      r0,r1
000014  d144              BNE      |L2.160|
;;;69       {
;;;70       /* USER CODE BEGIN ADC1_MspInit 0 */
;;;71     
;;;72       /* USER CODE END ADC1_MspInit 0 */
;;;73         /* ADC1 clock enable */
;;;74         __HAL_RCC_ADC1_CLK_ENABLE();
000016  bf00              NOP      
000018  2000              MOVS     r0,#0
00001a  9000              STR      r0,[sp,#0]
00001c  4822              LDR      r0,|L2.168|
00001e  6800              LDR      r0,[r0,#0]
000020  f4407080          ORR      r0,r0,#0x100
000024  4920              LDR      r1,|L2.168|
000026  6008              STR      r0,[r1,#0]
000028  4608              MOV      r0,r1
00002a  6800              LDR      r0,[r0,#0]
00002c  f4007080          AND      r0,r0,#0x100
000030  9000              STR      r0,[sp,#0]
000032  bf00              NOP      
000034  bf00              NOP      
;;;75     
;;;76         __HAL_RCC_GPIOC_CLK_ENABLE();
000036  bf00              NOP      
000038  2000              MOVS     r0,#0
00003a  9000              STR      r0,[sp,#0]
00003c  481a              LDR      r0,|L2.168|
00003e  3814              SUBS     r0,r0,#0x14
000040  6800              LDR      r0,[r0,#0]
000042  f0400004          ORR      r0,r0,#4
000046  4918              LDR      r1,|L2.168|
000048  3914              SUBS     r1,r1,#0x14
00004a  6008              STR      r0,[r1,#0]
00004c  4608              MOV      r0,r1
00004e  6800              LDR      r0,[r0,#0]
000050  f0000004          AND      r0,r0,#4
000054  9000              STR      r0,[sp,#0]
000056  bf00              NOP      
000058  bf00              NOP      
;;;77         __HAL_RCC_GPIOA_CLK_ENABLE();
00005a  bf00              NOP      
00005c  2000              MOVS     r0,#0
00005e  9000              STR      r0,[sp,#0]
000060  4608              MOV      r0,r1
000062  6800              LDR      r0,[r0,#0]
000064  f0400001          ORR      r0,r0,#1
000068  6008              STR      r0,[r1,#0]
00006a  4608              MOV      r0,r1
00006c  6800              LDR      r0,[r0,#0]
00006e  f0000001          AND      r0,r0,#1
000072  9000              STR      r0,[sp,#0]
000074  bf00              NOP      
000076  bf00              NOP      
;;;78         /**ADC1 GPIO Configuration
;;;79         PC0     ------> ADC1_IN10
;;;80         PC1     ------> ADC1_IN11
;;;81         PC2     ------> ADC1_IN12
;;;82         PC3     ------> ADC1_IN13
;;;83         PA0     ------> ADC1_IN0
;;;84         PA1     ------> ADC1_IN1
;;;85         PA2     ------> ADC1_IN2
;;;86         PA3     ------> ADC1_IN3
;;;87         */
;;;88         GPIO_InitStruct.Pin = LPC_ISMON0_Pin|LPB_ISMON1_Pin|LPB_ISMON0_Pin|LPA_ISMON1_Pin;
000078  200f              MOVS     r0,#0xf
00007a  9001              STR      r0,[sp,#4]
;;;89         GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
00007c  2003              MOVS     r0,#3
00007e  9002              STR      r0,[sp,#8]
;;;90         GPIO_InitStruct.Pull = GPIO_NOPULL;
000080  2000              MOVS     r0,#0
000082  9003              STR      r0,[sp,#0xc]
;;;91         HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
000084  a901              ADD      r1,sp,#4
000086  4809              LDR      r0,|L2.172|
000088  f7fffffe          BL       HAL_GPIO_Init
;;;92     
;;;93         GPIO_InitStruct.Pin = LPA_ISMON0_Pin|LASER_NTC_Pin|LASER_PD_Pin|LASER_FIBER_Pin;
00008c  200f              MOVS     r0,#0xf
00008e  9001              STR      r0,[sp,#4]
;;;94         GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
000090  2003              MOVS     r0,#3
000092  9002              STR      r0,[sp,#8]
;;;95         GPIO_InitStruct.Pull = GPIO_NOPULL;
000094  2000              MOVS     r0,#0
000096  9003              STR      r0,[sp,#0xc]
;;;96         HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
000098  a901              ADD      r1,sp,#4
00009a  4805              LDR      r0,|L2.176|
00009c  f7fffffe          BL       HAL_GPIO_Init
                  |L2.160|
;;;97     
;;;98       /* USER CODE BEGIN ADC1_MspInit 1 */
;;;99     
;;;100      /* USER CODE END ADC1_MspInit 1 */
;;;101      }
;;;102    }
0000a0  b006              ADD      sp,sp,#0x18
0000a2  bd10              POP      {r4,pc}
;;;103    
                          ENDP

                  |L2.164|
                          DCD      0x40012000
                  |L2.168|
                          DCD      0x40023844
                  |L2.172|
                          DCD      0x40020800
                  |L2.176|
                          DCD      0x40020000

                          AREA ||i.MX_ADC1_Init||, CODE, READONLY, ALIGN=2

                  MX_ADC1_Init PROC
;;;29     /* ADC1 init function */
;;;30     void MX_ADC1_Init(void)
000000  b51f              PUSH     {r0-r4,lr}
;;;31     {
;;;32       ADC_ChannelConfTypeDef sConfig = {0};
000002  2000              MOVS     r0,#0
000004  9000              STR      r0,[sp,#0]
000006  9001              STR      r0,[sp,#4]
000008  9002              STR      r0,[sp,#8]
00000a  9003              STR      r0,[sp,#0xc]
;;;33     
;;;34       /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
;;;35       */
;;;36       hadc1.Instance = ADC1;
00000c  4815              LDR      r0,|L3.100|
00000e  4916              LDR      r1,|L3.104|
000010  6008              STR      r0,[r1,#0]  ; hadc1
;;;37       hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
000012  f44f3080          MOV      r0,#0x10000
000016  6048              STR      r0,[r1,#4]  ; hadc1
;;;38       hadc1.Init.Resolution = ADC_RESOLUTION_12B;
000018  2100              MOVS     r1,#0
00001a  4813              LDR      r0,|L3.104|
00001c  6081              STR      r1,[r0,#8]
;;;39       hadc1.Init.ScanConvMode = DISABLE;
00001e  6101              STR      r1,[r0,#0x10]
;;;40       hadc1.Init.ContinuousConvMode = DISABLE;
000020  7601              STRB     r1,[r0,#0x18]
;;;41       hadc1.Init.DiscontinuousConvMode = DISABLE;
000022  f8801020          STRB     r1,[r0,#0x20]
;;;42       hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
000026  62c1              STR      r1,[r0,#0x2c]
;;;43       hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
000028  4910              LDR      r1,|L3.108|
00002a  6281              STR      r1,[r0,#0x28]
;;;44       hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
00002c  2100              MOVS     r1,#0
00002e  60c1              STR      r1,[r0,#0xc]
;;;45       hadc1.Init.NbrOfConversion = 1;
000030  2101              MOVS     r1,#1
000032  61c1              STR      r1,[r0,#0x1c]
;;;46       hadc1.Init.DMAContinuousRequests = DISABLE;
000034  2100              MOVS     r1,#0
000036  f8801030          STRB     r1,[r0,#0x30]
;;;47       hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
00003a  2101              MOVS     r1,#1
00003c  6141              STR      r1,[r0,#0x14]
;;;48       if (HAL_ADC_Init(&hadc1) != HAL_OK)
00003e  f7fffffe          BL       HAL_ADC_Init
000042  b108              CBZ      r0,|L3.72|
;;;49       {
;;;50         Error_Handler();
000044  f7fffffe          BL       Error_Handler
                  |L3.72|
;;;51       }
;;;52       /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
;;;53       */
;;;54       sConfig.Channel = ADC_CHANNEL_0;
000048  2000              MOVS     r0,#0
00004a  9000              STR      r0,[sp,#0]
;;;55       sConfig.Rank = 1;
00004c  2001              MOVS     r0,#1
00004e  9001              STR      r0,[sp,#4]
;;;56       sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
000050  2000              MOVS     r0,#0
000052  9002              STR      r0,[sp,#8]
;;;57       if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
000054  4669              MOV      r1,sp
000056  4804              LDR      r0,|L3.104|
000058  f7fffffe          BL       HAL_ADC_ConfigChannel
00005c  b108              CBZ      r0,|L3.98|
;;;58       {
;;;59         Error_Handler();
00005e  f7fffffe          BL       Error_Handler
                  |L3.98|
;;;60       }
;;;61     
;;;62     }
000062  bd1f              POP      {r0-r4,pc}
;;;63     
                          ENDP

                  |L3.100|
                          DCD      0x40012000
                  |L3.104|
                          DCD      hadc1
                  |L3.108|
                          DCD      0x0f000001

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  hadc1
                          %        72

;*** Start embedded assembler ***

#line 1 "../Core/Src/adc.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_adc_c_7cc13d26____REV16|
#line 463 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___5_adc_c_7cc13d26____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_adc_c_7cc13d26____REVSH|
#line 478
|__asm___5_adc_c_7cc13d26____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___5_adc_c_7cc13d26____RRX|
#line 665
|__asm___5_adc_c_7cc13d26____RRX| PROC
#line 666

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
