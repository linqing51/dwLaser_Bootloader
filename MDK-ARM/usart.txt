; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --interleave -omcu_application\usart.o --asm_dir=./ --list_dir=--list --depend=mcu_application\usart.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931 -I../Core/Inc -I../FATFS/Target -I../FATFS/App -I../USB_HOST/App -I../USB_HOST/Target -I../Drivers/STM32F4xx_HAL_Driver/Inc -I../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy -I../Middlewares/Third_Party/FatFs/src -I../Middlewares/ST/STM32_USB_Host_Library/Core/Inc -I../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc -I../Drivers/CMSIS/Device/ST/STM32F4xx/Include -I../Drivers/CMSIS/Include -I..\Drivers\CMSIS\DSP\Include -I..\Bootloader -I..\..\dwLaser_Application\MCU_Application\deviceInfo -I.\RTE\_MCU_Application -IC:\Users\linqi\AppData\Local\Arm\Packs\ARM\CMSIS\5.7.0\CMSIS\Core\Include -IC:\Users\linqi\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.15.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=533 -D_RTE_ -DSTM32F413xx -D_RTE_ -DUSE_HAL_DRIVER -DSTM32F413xx -DARM_MATH_CM4 --omf_browse=mcu_application\usart.crf ../Core/Src/usart.c]
                          THUMB

                          AREA ||i.HAL_UART_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_UART_MspDeInit PROC
;;;165    
;;;166    void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
000000  b510              PUSH     {r4,lr}
;;;167    {
000002  4604              MOV      r4,r0
;;;168    
;;;169      if(uartHandle->Instance==UART5)
000004  491c              LDR      r1,|L1.120|
000006  6820              LDR      r0,[r4,#0]
000008  4288              CMP      r0,r1
00000a  d10e              BNE      |L1.42|
;;;170      {
;;;171      /* USER CODE BEGIN UART5_MspDeInit 0 */
;;;172    
;;;173      /* USER CODE END UART5_MspDeInit 0 */
;;;174        /* Peripheral clock disable */
;;;175        __HAL_RCC_UART5_CLK_DISABLE();
00000c  481b              LDR      r0,|L1.124|
00000e  6800              LDR      r0,[r0,#0]
000010  f4201080          BIC      r0,r0,#0x100000
000014  4919              LDR      r1,|L1.124|
000016  6008              STR      r0,[r1,#0]
;;;176    
;;;177        /**UART5 GPIO Configuration
;;;178        PB12     ------> UART5_RX
;;;179        PB13     ------> UART5_TX
;;;180        */
;;;181        HAL_GPIO_DeInit(GPIOB, LCD_RX_Pin|LCD_TX_Pin);
000018  f44f5140          MOV      r1,#0x3000
00001c  4818              LDR      r0,|L1.128|
00001e  f7fffffe          BL       HAL_GPIO_DeInit
;;;182    
;;;183      /* USER CODE BEGIN UART5_MspDeInit 1 */
;;;184    	HAL_UART_DeInit(&huart5);
000022  4818              LDR      r0,|L1.132|
000024  f7fffffe          BL       HAL_UART_DeInit
000028  e024              B        |L1.116|
                  |L1.42|
;;;185      /* USER CODE END UART5_MspDeInit 1 */
;;;186      }
;;;187      else if(uartHandle->Instance==USART1)
00002a  4917              LDR      r1,|L1.136|
00002c  6820              LDR      r0,[r4,#0]
00002e  4288              CMP      r0,r1
000030  d110              BNE      |L1.84|
;;;188      {
;;;189      /* USER CODE BEGIN USART1_MspDeInit 0 */
;;;190    
;;;191      /* USER CODE END USART1_MspDeInit 0 */
;;;192        /* Peripheral clock disable */
;;;193        __HAL_RCC_USART1_CLK_DISABLE();
000032  4812              LDR      r0,|L1.124|
000034  1d00              ADDS     r0,r0,#4
000036  6800              LDR      r0,[r0,#0]
000038  f0200010          BIC      r0,r0,#0x10
00003c  490f              LDR      r1,|L1.124|
00003e  1d09              ADDS     r1,r1,#4
000040  6008              STR      r0,[r1,#0]
;;;194    
;;;195        /**USART1 GPIO Configuration
;;;196        PA9     ------> USART1_TX
;;;197        PA10     ------> USART1_RX
;;;198        */
;;;199        HAL_GPIO_DeInit(GPIOA, DBG_TX_Pin|DBG_RX_Pin);
000042  f44f61c0          MOV      r1,#0x600
000046  4811              LDR      r0,|L1.140|
000048  f7fffffe          BL       HAL_GPIO_DeInit
;;;200    
;;;201      /* USER CODE BEGIN USART1_MspDeInit 1 */
;;;202    	HAL_UART_DeInit(&huart1);
00004c  4810              LDR      r0,|L1.144|
00004e  f7fffffe          BL       HAL_UART_DeInit
000052  e00f              B        |L1.116|
                  |L1.84|
;;;203      /* USER CODE END USART1_MspDeInit 1 */
;;;204      }
;;;205      else if(uartHandle->Instance==USART6)
000054  490f              LDR      r1,|L1.148|
000056  6820              LDR      r0,[r4,#0]
000058  4288              CMP      r0,r1
00005a  d10b              BNE      |L1.116|
;;;206      {
;;;207      /* USER CODE BEGIN USART6_MspDeInit 0 */
;;;208    
;;;209      /* USER CODE END USART6_MspDeInit 0 */
;;;210        /* Peripheral clock disable */
;;;211        __HAL_RCC_USART6_CLK_DISABLE();
00005c  4807              LDR      r0,|L1.124|
00005e  1d00              ADDS     r0,r0,#4
000060  6800              LDR      r0,[r0,#0]
000062  f0200020          BIC      r0,r0,#0x20
000066  4905              LDR      r1,|L1.124|
000068  1d09              ADDS     r1,r1,#4
00006a  6008              STR      r0,[r1,#0]
;;;212    
;;;213        /**USART6 GPIO Configuration
;;;214        PC6     ------> USART6_TX
;;;215        PC7     ------> USART6_RX
;;;216        */
;;;217        HAL_GPIO_DeInit(GPIOC, NFC_TX_Pin|NFC_RX_Pin);
00006c  21c0              MOVS     r1,#0xc0
00006e  480a              LDR      r0,|L1.152|
000070  f7fffffe          BL       HAL_GPIO_DeInit
                  |L1.116|
;;;218    
;;;219      /* USER CODE BEGIN USART6_MspDeInit 1 */
;;;220    
;;;221      /* USER CODE END USART6_MspDeInit 1 */
;;;222      }
;;;223    }
000074  bd10              POP      {r4,pc}
;;;224    
                          ENDP

000076  0000              DCW      0x0000
                  |L1.120|
                          DCD      0x40005000
                  |L1.124|
                          DCD      0x40023840
                  |L1.128|
                          DCD      0x40020400
                  |L1.132|
                          DCD      huart5
                  |L1.136|
                          DCD      0x40011000
                  |L1.140|
                          DCD      0x40020000
                  |L1.144|
                          DCD      huart1
                  |L1.148|
                          DCD      0x40011400
                  |L1.152|
                          DCD      0x40020800

                          AREA ||i.HAL_UART_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_UART_MspInit PROC
;;;87     
;;;88     void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
000000  b510              PUSH     {r4,lr}
;;;89     {
000002  b086              SUB      sp,sp,#0x18
000004  4604              MOV      r4,r0
;;;90     
;;;91       GPIO_InitTypeDef GPIO_InitStruct = {0};
000006  2114              MOVS     r1,#0x14
000008  a801              ADD      r0,sp,#4
00000a  f7fffffe          BL       __aeabi_memclr4
;;;92       if(uartHandle->Instance==UART5)
00000e  4952              LDR      r1,|L2.344|
000010  6820              LDR      r0,[r4,#0]
000012  4288              CMP      r0,r1
000014  d131              BNE      |L2.122|
;;;93       {
;;;94       /* USER CODE BEGIN UART5_MspInit 0 */
;;;95     
;;;96       /* USER CODE END UART5_MspInit 0 */
;;;97         /* UART5 clock enable */
;;;98         __HAL_RCC_UART5_CLK_ENABLE();
000016  bf00              NOP      
000018  2000              MOVS     r0,#0
00001a  9000              STR      r0,[sp,#0]
00001c  484f              LDR      r0,|L2.348|
00001e  6800              LDR      r0,[r0,#0]
000020  f4401080          ORR      r0,r0,#0x100000
000024  494d              LDR      r1,|L2.348|
000026  6008              STR      r0,[r1,#0]
000028  4608              MOV      r0,r1
00002a  6800              LDR      r0,[r0,#0]
00002c  f4001080          AND      r0,r0,#0x100000
000030  9000              STR      r0,[sp,#0]
000032  bf00              NOP      
000034  bf00              NOP      
;;;99     
;;;100        __HAL_RCC_GPIOB_CLK_ENABLE();
000036  bf00              NOP      
000038  2000              MOVS     r0,#0
00003a  9000              STR      r0,[sp,#0]
00003c  4847              LDR      r0,|L2.348|
00003e  3810              SUBS     r0,r0,#0x10
000040  6800              LDR      r0,[r0,#0]
000042  f0400002          ORR      r0,r0,#2
000046  4945              LDR      r1,|L2.348|
000048  3910              SUBS     r1,r1,#0x10
00004a  6008              STR      r0,[r1,#0]
00004c  4608              MOV      r0,r1
00004e  6800              LDR      r0,[r0,#0]
000050  f0000002          AND      r0,r0,#2
000054  9000              STR      r0,[sp,#0]
000056  bf00              NOP      
000058  bf00              NOP      
;;;101        /**UART5 GPIO Configuration
;;;102        PB12     ------> UART5_RX
;;;103        PB13     ------> UART5_TX
;;;104        */
;;;105        GPIO_InitStruct.Pin = LCD_RX_Pin|LCD_TX_Pin;
00005a  f44f5040          MOV      r0,#0x3000
00005e  9001              STR      r0,[sp,#4]
;;;106        GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
000060  2002              MOVS     r0,#2
000062  9002              STR      r0,[sp,#8]
;;;107        GPIO_InitStruct.Pull = GPIO_PULLUP;
000064  2001              MOVS     r0,#1
000066  9003              STR      r0,[sp,#0xc]
;;;108        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
000068  2000              MOVS     r0,#0
00006a  9004              STR      r0,[sp,#0x10]
;;;109        GPIO_InitStruct.Alternate = GPIO_AF11_UART5;
00006c  200b              MOVS     r0,#0xb
00006e  9005              STR      r0,[sp,#0x14]
;;;110        HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
000070  a901              ADD      r1,sp,#4
000072  483b              LDR      r0,|L2.352|
000074  f7fffffe          BL       HAL_GPIO_Init
000078  e06b              B        |L2.338|
                  |L2.122|
;;;111    
;;;112      /* USER CODE BEGIN UART5_MspInit 1 */
;;;113    
;;;114      /* USER CODE END UART5_MspInit 1 */
;;;115      }
;;;116      else if(uartHandle->Instance==USART1)
00007a  493a              LDR      r1,|L2.356|
00007c  6820              LDR      r0,[r4,#0]
00007e  4288              CMP      r0,r1
000080  d132              BNE      |L2.232|
;;;117      {
;;;118      /* USER CODE BEGIN USART1_MspInit 0 */
;;;119    
;;;120      /* USER CODE END USART1_MspInit 0 */
;;;121        /* USART1 clock enable */
;;;122        __HAL_RCC_USART1_CLK_ENABLE();
000082  bf00              NOP      
000084  2000              MOVS     r0,#0
000086  9000              STR      r0,[sp,#0]
000088  4834              LDR      r0,|L2.348|
00008a  1d00              ADDS     r0,r0,#4
00008c  6800              LDR      r0,[r0,#0]
00008e  f0400010          ORR      r0,r0,#0x10
000092  4932              LDR      r1,|L2.348|
000094  1d09              ADDS     r1,r1,#4
000096  6008              STR      r0,[r1,#0]
000098  4608              MOV      r0,r1
00009a  6800              LDR      r0,[r0,#0]
00009c  f0000010          AND      r0,r0,#0x10
0000a0  9000              STR      r0,[sp,#0]
0000a2  bf00              NOP      
0000a4  bf00              NOP      
;;;123    
;;;124        __HAL_RCC_GPIOA_CLK_ENABLE();
0000a6  bf00              NOP      
0000a8  2000              MOVS     r0,#0
0000aa  9000              STR      r0,[sp,#0]
0000ac  482b              LDR      r0,|L2.348|
0000ae  3810              SUBS     r0,r0,#0x10
0000b0  6800              LDR      r0,[r0,#0]
0000b2  f0400001          ORR      r0,r0,#1
0000b6  4929              LDR      r1,|L2.348|
0000b8  3910              SUBS     r1,r1,#0x10
0000ba  6008              STR      r0,[r1,#0]
0000bc  4608              MOV      r0,r1
0000be  6800              LDR      r0,[r0,#0]
0000c0  f0000001          AND      r0,r0,#1
0000c4  9000              STR      r0,[sp,#0]
0000c6  bf00              NOP      
0000c8  bf00              NOP      
;;;125        /**USART1 GPIO Configuration
;;;126        PA9     ------> USART1_TX
;;;127        PA10     ------> USART1_RX
;;;128        */
;;;129        GPIO_InitStruct.Pin = DBG_TX_Pin|DBG_RX_Pin;
0000ca  f44f60c0          MOV      r0,#0x600
0000ce  9001              STR      r0,[sp,#4]
;;;130        GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
0000d0  2002              MOVS     r0,#2
0000d2  9002              STR      r0,[sp,#8]
;;;131        GPIO_InitStruct.Pull = GPIO_NOPULL;
0000d4  2000              MOVS     r0,#0
0000d6  9003              STR      r0,[sp,#0xc]
;;;132        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
0000d8  9004              STR      r0,[sp,#0x10]
;;;133        GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
0000da  2007              MOVS     r0,#7
0000dc  9005              STR      r0,[sp,#0x14]
;;;134        HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
0000de  a901              ADD      r1,sp,#4
0000e0  4821              LDR      r0,|L2.360|
0000e2  f7fffffe          BL       HAL_GPIO_Init
0000e6  e034              B        |L2.338|
                  |L2.232|
;;;135    
;;;136      /* USER CODE BEGIN USART1_MspInit 1 */
;;;137    
;;;138      /* USER CODE END USART1_MspInit 1 */
;;;139      }
;;;140      else if(uartHandle->Instance==USART6)
0000e8  4920              LDR      r1,|L2.364|
0000ea  6820              LDR      r0,[r4,#0]
0000ec  4288              CMP      r0,r1
0000ee  d130              BNE      |L2.338|
;;;141      {
;;;142      /* USER CODE BEGIN USART6_MspInit 0 */
;;;143    
;;;144      /* USER CODE END USART6_MspInit 0 */
;;;145        /* USART6 clock enable */
;;;146        __HAL_RCC_USART6_CLK_ENABLE();
0000f0  bf00              NOP      
0000f2  2000              MOVS     r0,#0
0000f4  9000              STR      r0,[sp,#0]
0000f6  4819              LDR      r0,|L2.348|
0000f8  1d00              ADDS     r0,r0,#4
0000fa  6800              LDR      r0,[r0,#0]
0000fc  f0400020          ORR      r0,r0,#0x20
000100  4916              LDR      r1,|L2.348|
000102  1d09              ADDS     r1,r1,#4
000104  6008              STR      r0,[r1,#0]
000106  4608              MOV      r0,r1
000108  6800              LDR      r0,[r0,#0]
00010a  f0000020          AND      r0,r0,#0x20
00010e  9000              STR      r0,[sp,#0]
000110  bf00              NOP      
000112  bf00              NOP      
;;;147    
;;;148        __HAL_RCC_GPIOC_CLK_ENABLE();
000114  bf00              NOP      
000116  2000              MOVS     r0,#0
000118  9000              STR      r0,[sp,#0]
00011a  4810              LDR      r0,|L2.348|
00011c  3810              SUBS     r0,r0,#0x10
00011e  6800              LDR      r0,[r0,#0]
000120  f0400004          ORR      r0,r0,#4
000124  490d              LDR      r1,|L2.348|
000126  3910              SUBS     r1,r1,#0x10
000128  6008              STR      r0,[r1,#0]
00012a  4608              MOV      r0,r1
00012c  6800              LDR      r0,[r0,#0]
00012e  f0000004          AND      r0,r0,#4
000132  9000              STR      r0,[sp,#0]
000134  bf00              NOP      
000136  bf00              NOP      
;;;149        /**USART6 GPIO Configuration
;;;150        PC6     ------> USART6_TX
;;;151        PC7     ------> USART6_RX
;;;152        */
;;;153        GPIO_InitStruct.Pin = NFC_TX_Pin|NFC_RX_Pin;
000138  20c0              MOVS     r0,#0xc0
00013a  9001              STR      r0,[sp,#4]
;;;154        GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
00013c  2002              MOVS     r0,#2
00013e  9002              STR      r0,[sp,#8]
;;;155        GPIO_InitStruct.Pull = GPIO_NOPULL;
000140  2000              MOVS     r0,#0
000142  9003              STR      r0,[sp,#0xc]
;;;156        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
000144  9004              STR      r0,[sp,#0x10]
;;;157        GPIO_InitStruct.Alternate = GPIO_AF8_USART6;
000146  2008              MOVS     r0,#8
000148  9005              STR      r0,[sp,#0x14]
;;;158        HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
00014a  a901              ADD      r1,sp,#4
00014c  4808              LDR      r0,|L2.368|
00014e  f7fffffe          BL       HAL_GPIO_Init
                  |L2.338|
;;;159    
;;;160      /* USER CODE BEGIN USART6_MspInit 1 */
;;;161    
;;;162      /* USER CODE END USART6_MspInit 1 */
;;;163      }
;;;164    }
000152  b006              ADD      sp,sp,#0x18
000154  bd10              POP      {r4,pc}
;;;165    
                          ENDP

000156  0000              DCW      0x0000
                  |L2.344|
                          DCD      0x40005000
                  |L2.348|
                          DCD      0x40023840
                  |L2.352|
                          DCD      0x40020400
                  |L2.356|
                          DCD      0x40011000
                  |L2.360|
                          DCD      0x40020000
                  |L2.364|
                          DCD      0x40011400
                  |L2.368|
                          DCD      0x40020800

                          AREA ||i.MX_UART5_Init||, CODE, READONLY, ALIGN=2

                  MX_UART5_Init PROC
;;;31     /* UART5 init function */
;;;32     void MX_UART5_Init(void)
000000  b510              PUSH     {r4,lr}
;;;33     {
;;;34     
;;;35       huart5.Instance = UART5;
000002  480b              LDR      r0,|L3.48|
000004  490b              LDR      r1,|L3.52|
000006  6008              STR      r0,[r1,#0]  ; huart5
;;;36       huart5.Init.BaudRate = 115200;
000008  f44f30e1          MOV      r0,#0x1c200
00000c  6048              STR      r0,[r1,#4]  ; huart5
;;;37       huart5.Init.WordLength = UART_WORDLENGTH_8B;
00000e  2100              MOVS     r1,#0
000010  4808              LDR      r0,|L3.52|
000012  6081              STR      r1,[r0,#8]
;;;38       huart5.Init.StopBits = UART_STOPBITS_1;
000014  60c1              STR      r1,[r0,#0xc]
;;;39       huart5.Init.Parity = UART_PARITY_NONE;
000016  6101              STR      r1,[r0,#0x10]
;;;40       huart5.Init.Mode = UART_MODE_TX_RX;
000018  210c              MOVS     r1,#0xc
00001a  6141              STR      r1,[r0,#0x14]
;;;41       huart5.Init.HwFlowCtl = UART_HWCONTROL_NONE;
00001c  2100              MOVS     r1,#0
00001e  6181              STR      r1,[r0,#0x18]
;;;42       huart5.Init.OverSampling = UART_OVERSAMPLING_16;
000020  61c1              STR      r1,[r0,#0x1c]
;;;43       if (HAL_UART_Init(&huart5) != HAL_OK)
000022  f7fffffe          BL       HAL_UART_Init
000026  b108              CBZ      r0,|L3.44|
;;;44       {
;;;45         Error_Handler();
000028  f7fffffe          BL       Error_Handler
                  |L3.44|
;;;46       }
;;;47     
;;;48     }
00002c  bd10              POP      {r4,pc}
;;;49     /* USART1 init function */
                          ENDP

00002e  0000              DCW      0x0000
                  |L3.48|
                          DCD      0x40005000
                  |L3.52|
                          DCD      huart5

                          AREA ||i.MX_USART1_UART_Init||, CODE, READONLY, ALIGN=2

                  MX_USART1_UART_Init PROC
;;;50     
;;;51     void MX_USART1_UART_Init(void)
000000  b510              PUSH     {r4,lr}
;;;52     {
;;;53     
;;;54       huart1.Instance = USART1;
000002  480b              LDR      r0,|L4.48|
000004  490b              LDR      r1,|L4.52|
000006  6008              STR      r0,[r1,#0]  ; huart1
;;;55       huart1.Init.BaudRate = 115200;
000008  f44f30e1          MOV      r0,#0x1c200
00000c  6048              STR      r0,[r1,#4]  ; huart1
;;;56       huart1.Init.WordLength = UART_WORDLENGTH_8B;
00000e  2100              MOVS     r1,#0
000010  4808              LDR      r0,|L4.52|
000012  6081              STR      r1,[r0,#8]
;;;57       huart1.Init.StopBits = UART_STOPBITS_1;
000014  60c1              STR      r1,[r0,#0xc]
;;;58       huart1.Init.Parity = UART_PARITY_NONE;
000016  6101              STR      r1,[r0,#0x10]
;;;59       huart1.Init.Mode = UART_MODE_TX_RX;
000018  210c              MOVS     r1,#0xc
00001a  6141              STR      r1,[r0,#0x14]
;;;60       huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
00001c  2100              MOVS     r1,#0
00001e  6181              STR      r1,[r0,#0x18]
;;;61       huart1.Init.OverSampling = UART_OVERSAMPLING_16;
000020  61c1              STR      r1,[r0,#0x1c]
;;;62       if (HAL_UART_Init(&huart1) != HAL_OK)
000022  f7fffffe          BL       HAL_UART_Init
000026  b108              CBZ      r0,|L4.44|
;;;63       {
;;;64         Error_Handler();
000028  f7fffffe          BL       Error_Handler
                  |L4.44|
;;;65       }
;;;66     
;;;67     }
00002c  bd10              POP      {r4,pc}
;;;68     /* USART6 init function */
                          ENDP

00002e  0000              DCW      0x0000
                  |L4.48|
                          DCD      0x40011000
                  |L4.52|
                          DCD      huart1

                          AREA ||i.MX_USART6_UART_Init||, CODE, READONLY, ALIGN=2

                  MX_USART6_UART_Init PROC
;;;69     
;;;70     void MX_USART6_UART_Init(void)
000000  b510              PUSH     {r4,lr}
;;;71     {
;;;72     
;;;73       huart6.Instance = USART6;
000002  480b              LDR      r0,|L5.48|
000004  490b              LDR      r1,|L5.52|
000006  6008              STR      r0,[r1,#0]  ; huart6
;;;74       huart6.Init.BaudRate = 115200;
000008  f44f30e1          MOV      r0,#0x1c200
00000c  6048              STR      r0,[r1,#4]  ; huart6
;;;75       huart6.Init.WordLength = UART_WORDLENGTH_8B;
00000e  2100              MOVS     r1,#0
000010  4808              LDR      r0,|L5.52|
000012  6081              STR      r1,[r0,#8]
;;;76       huart6.Init.StopBits = UART_STOPBITS_1;
000014  60c1              STR      r1,[r0,#0xc]
;;;77       huart6.Init.Parity = UART_PARITY_NONE;
000016  6101              STR      r1,[r0,#0x10]
;;;78       huart6.Init.Mode = UART_MODE_TX_RX;
000018  210c              MOVS     r1,#0xc
00001a  6141              STR      r1,[r0,#0x14]
;;;79       huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
00001c  2100              MOVS     r1,#0
00001e  6181              STR      r1,[r0,#0x18]
;;;80       huart6.Init.OverSampling = UART_OVERSAMPLING_16;
000020  61c1              STR      r1,[r0,#0x1c]
;;;81       if (HAL_UART_Init(&huart6) != HAL_OK)
000022  f7fffffe          BL       HAL_UART_Init
000026  b108              CBZ      r0,|L5.44|
;;;82       {
;;;83         Error_Handler();
000028  f7fffffe          BL       Error_Handler
                  |L5.44|
;;;84       }
;;;85     
;;;86     }
00002c  bd10              POP      {r4,pc}
;;;87     
                          ENDP

00002e  0000              DCW      0x0000
                  |L5.48|
                          DCD      0x40011400
                  |L5.52|
                          DCD      huart6

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  huart5
                          %        64
                  huart1
                          %        64
                  huart6
                          %        64

;*** Start embedded assembler ***

#line 1 "../Core/Src/usart.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_usart_c_db5f8b42____REV16|
#line 463 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___7_usart_c_db5f8b42____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_usart_c_db5f8b42____REVSH|
#line 478
|__asm___7_usart_c_db5f8b42____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___7_usart_c_db5f8b42____RRX|
#line 665
|__asm___7_usart_c_db5f8b42____RRX| PROC
#line 666

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
